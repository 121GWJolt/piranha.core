@model Piranha.Areas.Manager.Models.PageEditModel
@using Piranha.Areas.Manager.Models
@inject Piranha.IApi Api
@{
    var blogModel = PostListModel.GetByBlogId(Api, Model.Id);
}
<div class="row">
    <div class="col-sm-12 custom-editor-list">
        <table class="table table-striped table-main">
            <tbody>
                <tr>
                    <td colspan="3" style="border-top:none">
                        <div class="btn-group pull-right">
                            <button type="button" class="btn btn-labeled btn-primary btn-sm" data-toggle="dropdown">
                                <span class="btn-label">
                                    <i class="glyphicon glyphicon-plus"></i>
                                </span>Add a new post
                            </button>
                            <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-toggle="dropdown">
                                <span class="caret"></span>
                                <span class="sr-only">Toggle Dropdown</span>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-right" role="menu">
                                @foreach (var type in blogModel.PostTypes) {
                                    <li><a href="@Url.Action("Add", "Post", new { type = type.Id, blogId = Model.Id })">@type.Title</a></li>
                                }
                            </ul>
                        </div>
                    </td>
                </tr>
                @foreach (var post in blogModel.Posts) {
                    <tr>
                        <td>
                            <a href="@Url.Action("Edit", "Post", new { id = post.Id })">@post.Title</a>
                            <small class="post-meta">
                                @if (post.Published.HasValue) {
                                    <text>Published: @post.Published.Value.ToString("yyyy-MM-dd")</text>
                                } else {
                                    <text>Unpublished</text>
                                }
                            </small>
                        </td>
                        <td>@post.TypeName</td>
                        <td class="actions one">
                            <a class="remove" href="@Url.Action("Delete", "Post", new { id = post.Id })">
                                <span class="glyphicon glyphicon-trash text-danger"></span>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>