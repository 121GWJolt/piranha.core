Vue.component("block-group",{props:["uid","block"],methods:{selectItem:function(e){for(var i=0;i<this.block.items.length;i++)this.block.items[i]==e?this.block.items[i].isActive=!0:this.block.items[i].isActive=!1}},mounted:function(){},beforeDestroy:function(){},template:"<div class='block-group'>  <div class='block-group-header'>    TODO: Global group fields  </div>  <div class='row'>    <div class='col-md-4'>      <div class='list-group list-group-flush'>        <a href='#' v-on:click.prevent='selectItem(child)' class='list-group-item' :class='{ active: child.isActive }' v-for='child in block.items'>          <span class='handle sortable-handle'>            <i class='fas fa-ellipsis-v'></i>          </span>          {{ child.item.body.media.filename }}        </a>      </div>    </div>    <div class='col-md-8'>      <div v-for='child in block.items' v-if='child.isActive' :class='\"block \" + child.component'>        <component v-bind:is='child.component' v-bind:uid='child.uid' v-bind:block='child.item'></component>      </div>    </div>  </div></div>"}),Vue.component("html-block",{props:["uid","block"],methods:{onBlur:function(e){this.block.body.value=e.target.innerHTML}},computed:{isEmpty:function(){return piranha.utils.isEmptyHtml(this.block.body.value)}},mounted:function(){piranha.editor.addInline(this.uid)},beforeDestroy:function(){piranha.editor.remove(this.uid)},template:"<div :class='{ empty: isEmpty }'>  <div contenteditable='true' :id='uid' spellcheck='false' v-html='block.body.value' v-on:blur='onBlur'></div></div>"}),Vue.component("html-column-block",{props:["uid","block"],methods:{onBlurCol1:function(e){this.block.column1.value=e.target.innerHTML},onBlurCol2:function(e){this.block.column2.value=e.target.innerHTML}},computed:{isEmpty1:function(){return piranha.utils.isEmptyHtml(this.block.column1.value)},isEmpty2:function(){return piranha.utils.isEmptyHtml(this.block.column2.value)}},mounted:function(){piranha.editor.addInline(this.uid+1),piranha.editor.addInline(this.uid+2)},beforeDestroy:function(){piranha.editor.remove(this.uid+1),piranha.editor.remove(this.uid+2)},template:"<div class='row'>  <div class='col-md-6'>    <div :class='{ empty: isEmpty1 }'>      <div :id='uid + 1' contenteditable='true' spellcheck='false' v-html='block.column1.value' v-on:blur='onBlurCol1'></div>    </div>  </div>  <div class='col-md-6'>    <div :class='{ empty: isEmpty2 }'>      <div :id='uid + 2' contenteditable='true' spellcheck='false' v-html='block.column2.value' v-on:blur='onBlurCol2'></div>    </div>  </div></div>"}),Vue.component("image-block",{props:["block"],methods:{clear:function(){},select:function(){piranha.mediapicker.open(this.update)},remove:function(){this.block.body.media=null},update:function(e){"Image"===e.type?(console.log(this),this.block.body.id=e.id,this.block.body.media=e):console.log("No image was selected")}},computed:{isEmpty:function(){return null==this.block.body.media},mediaUrl:function(){return null!=this.block.body.media?this.block.body.media.publicUrl.replace("~/",piranha.baseUrl):piranha.baseUrl+"assets/img/empty-image.png"}},template:"<div :class='{ empty: isEmpty }'>  <img :src='mediaUrl'>  <div class='media-picker'>    <div class='btn-group float-right'>      <button v-on:click.prevent='select' class='btn btn-primary text-center'>        <i class='fas fa-plus'></i>      </button>      <button v-on:click.prevent='remove' class='btn btn-danger text-center'>        <i class='fas fa-times'></i>      </button>    </div>    <div class='card text-left'>      <div class='card-body' v-if='isEmpty'>        &nbsp;      </div>      <div class='card-body' v-else>        {{ block.body.media.filename }}      </div>    </div>  </div></div>"}),Vue.component("text-block",{props:["block"],methods:{onBlur:function(e){this.block.body.value=e.target.innerHTML}},computed:{isEmpty:function(){return piranha.utils.isEmptyText(this.block.body.value)}},template:"<div :class='{ empty: isEmpty }'>  <pre contenteditable='true' spellcheck='false' v-html='block.body.value' v-on:blur='onBlur'></pre></div>"}),Vue.component("missing-block",{props:["block"],template:"<div class='alert alert-danger' role='alert'>Missing Component</div>"}),piranha.pageedit=new Vue({el:"#pageedit",data:{loading:!0,id:null,siteId:null,parentId:null,typeId:null,title:null,navigationTitle:null,slug:null,metaKeywords:null,metaDescription:null,blocks:[]},methods:{load:function(e){fetch(piranha.baseUrl+"manager/api/page/"+e).then(function(e){return e.json()}).then(function(e){piranha.pageedit.id=e.id,piranha.pageedit.siteId=e.siteId,piranha.pageedit.parentId=e.parentId,piranha.pageedit.typeId=e.typeId,piranha.pageedit.title=e.title,piranha.pageedit.navigationTitle=e.navigationTitle,piranha.pageedit.slug=e.slug,piranha.pageedit.metaKeywords=e.metaKeywords,piranha.pageedit.metaDescription=e.metaDescription,piranha.pageedit.blocks=e.blocks}).catch(function(e){console.log("error:",e)})},remove:function(e){console.log("Remove page: ",e)},addBlock:function(e,i){fetch(piranha.baseUrl+"manager/api/content/block/"+e).then(function(e){return e.json()}).then(function(e){i?piranha.pageedit.blocks.splice(i,0,e):piranha.pageedit.blocks.push(e)}).catch(function(e){console.log("error:",e)})},moveBlock:function(e,i){this.blocks.splice(i,0,this.blocks.splice(e,1)[0])},removeBlock:function(e){var i=this.blocks.indexOf(e);-1!==i&&this.blocks.splice(i,1)}},created:function(){},updated:function(){sortable(".blocks",{handle:".handle",items:":not(.unsortable)"})[0].addEventListener("sortupdate",function(e){piranha.pageedit.moveBlock(e.detail.origin.index,e.detail.destination.index)}),this.loading=!1}});